{
     "exp": {
          "title": "public schools [fullay, attendance labels, sat, drift>0.5], grade 8",
          "project": "ews",
          "root_exps": "exps/public schools [fullay, attendance labels, sat, drift]/grade 8"
     },
     "data": {
          "training_data_path": "datasets/ay2223_grade8.pkl",
          "inference_data_path": "datasets/ay2324_grade8.pkl",
          "index": "aadhaaruid",
          "label": "target",
          "holidays_calendar_path": "metadata/holidays_calendar.json",
          "column_filters": {
               "in": {
                    "schcat": ["1", "2", "3", "4", "5", "6", "7"]
               },
               "notin": {
                    "schmgt": ["5", "92", "93", "94", "95", "97", "101"]
               }
          },
          "sample": {
               "p": "actual",
               "seed": 5
          },
          "split": {
               "train_size": 0.7,
               "random_state": 42,
               "shuffle": true
          },
          "engineer_features": {
               "groups_of_months": {
                    "full": [6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4]
               },
               "combs_of_chars": [[1, ["m", "p", "a"]]],
               "partitions": [3],
               "disc_cols_miss_frxn": 1.0,
               "months_for_binary": [6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4],
               "absence_thresholds": [10, 15, 20, 30, 40, 50, 60]
          },
          "drop_columns_or_groups": ["month_agg_attnd", "schoolid", "villageid", "class", "studentage", "freetransportfacility", "academicyear", "[full][#partns=3][partn_3, frac_m]", "[full][#partns=3][partn_3, frac_p]", "[full][last_m]"]
     },
     "model": {
          "n_trials": 50,
          "calibration_nbins": 20,
          "params": {
               "fixed": {
                    "loss_function": "Logloss",
                    "random_seed": 42,
                    "task_type": "GPU",
                    "devices": "3",
                    "auto_class_weights": "Balanced"
               },
               "tune": {
                    "independent": {
                         "iterations": {
                              "dtype": "int",
                              "tuning_space": {
                                   "low": 500,
                                   "high": 3000,
                                   "step": 100
                              }
                         },
                         "depth": {
                              "dtype": "int",
                              "tuning_space": {
                                   "low": 4,
                                   "high": 10
                              }
                         },
                         "leaf_estimation_iterations": {
                              "dtype": "int",
                              "tuning_space": {
                                   "low": 5,
                                   "high": 20
                              }
                         },
                         "learning_rate": {
                              "dtype": "float",
                              "tuning_space": {
                                   "low": 0.0001,
                                   "high": 0.01,
                                   "log": true
                              }
                         },
                         "l2_leaf_reg": {
                              "dtype": "float",
                              "tuning_space": {
                                   "low": 1.0,
                                   "high": 5.0
                              }
                         },
                         "bootstrap_type": {
                              "dtype": "categorical",
                              "tuning_space": {
                                   "choices": ["Bayesian", "Bernoulli", "MVS"]
                              }
                         },
                         "grow_policy": {
                              "dtype": "categorical",
                              "tuning_space": {
                                   "choices": ["SymmetricTree"]
                              }
                         },
                         "leaf_estimation_method": {
                              "dtype": "categorical",
                              "tuning_space": {
                                   "choices": ["Newton", "Gradient"]
                              }
                         },
                         "boosting_type": {
                              "dtype": "categorical",
                              "tuning_space": {
                                   "choices": ["Ordered"]
                              }
                         },
                         "score_function": {
                              "dtype": "categorical",
                              "tuning_space": {
                                   "choices": ["Cosine"]
                              }
                         }
                    },
                    "dependent": {
                         "bagging_temperature": {
                              "dependent_on_param": "bootstrap_type",
                              "dependent_on_value": ["Bayesian"],
                              "dtype": "float",
                              "tuning_space": {
                                   "low": 0,
                                   "high": 10
                              }
                         },
                         "subsample": {
                              "dependent_on_param": "bootstrap_type",
                              "dependent_on_value": ["Bernoulli"],
                              "dtype": "float",
                              "tuning_space": {
                                   "low": 0.1,
                                   "high": 1
                              }
                         }
                    }
               }
          }
     }
}